{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/bfhl-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style.css'; // Updated import statement\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _response$numbers, _response$alphabets, _response$highest_alp;\n  const [inputJson, setInputJson] = useState('');\n  const [error, setError] = useState('');\n  const [response, setResponse] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Set document title and default options\n  useEffect(() => {\n    if (response !== null && response !== void 0 && response.roll_number) {\n      document.title = response.roll_number;\n    }\n    if (response !== null && response !== void 0 && response.is_success) {\n      setSelectedOptions(['numbers', 'alphabets', 'highest']);\n    }\n  }, [response]);\n  const validateJSON = jsonString => {\n    try {\n      const parsed = JSON.parse(jsonString);\n      return parsed.data && Array.isArray(parsed.data);\n    } catch {\n      return false;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setResponse(null);\n    if (!validateJSON(inputJson)) {\n      setError('Invalid JSON format - must contain \"data\" array');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const res = await fetch('http://localhost:8080/bfhl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: inputJson\n      });\n      const data = await res.json();\n      if (!res.ok || !data.is_success) {\n        throw new Error(data.error || 'API request failed');\n      }\n      setResponse(data);\n    } catch (err) {\n      setError(err.message);\n      setResponse(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleOptionToggle = option => {\n    setSelectedOptions(prev => prev.includes(option) ? prev.filter(item => item !== option) : [...prev, option]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputJson,\n        onChange: e => setInputJson(e.target.value),\n        placeholder: 'Example: {\"data\": [\"M\", \"1\", \"334\", \"4\", \"B\"]}',\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Processing...' : 'Process Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), (response === null || response === void 0 ? void 0 : response.is_success) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-panel\",\n        children: ['numbers', 'alphabets', 'highest'].map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"option-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedOptions.includes(option),\n            onChange: () => handleOptionToggle(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), option.charAt(0).toUpperCase() + option.slice(1)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [selectedOptions.includes('numbers') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ((_response$numbers = response.numbers) === null || _response$numbers === void 0 ? void 0 : _response$numbers.join(', ')) || 'None found'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), selectedOptions.includes('alphabets') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Alphabets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ((_response$alphabets = response.alphabets) === null || _response$alphabets === void 0 ? void 0 : _response$alphabets.join(', ')) || 'None found'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), selectedOptions.includes('highest') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Highest Alphabet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ((_response$highest_alp = response.highest_alphabet) === null || _response$highest_alp === void 0 ? void 0 : _response$highest_alp.join(', ')) || 'None found'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CpTG/suLnD090/q951EBXF2pU8Y=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","_response$numbers","_response$alphabets","_response$highest_alp","inputJson","setInputJson","error","setError","response","setResponse","selectedOptions","setSelectedOptions","isLoading","setIsLoading","roll_number","document","title","is_success","validateJSON","jsonString","parsed","JSON","parse","data","Array","isArray","handleSubmit","e","preventDefault","res","fetch","method","headers","body","json","ok","Error","err","message","handleOptionToggle","option","prev","includes","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","disabled","type","map","checked","charAt","toUpperCase","slice","numbers","join","alphabets","highest_alphabet","_c","$RefreshReg$"],"sources":["/home/anubhav/bfhl-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style.css'; // Updated import statement\n\nexport default function App() {\n  const [inputJson, setInputJson] = useState('');\n  const [error, setError] = useState('');\n  const [response, setResponse] = useState(null);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Set document title and default options\n  useEffect(() => {\n    if (response?.roll_number) {\n      document.title = response.roll_number;\n    }\n    if (response?.is_success) {\n      setSelectedOptions(['numbers', 'alphabets', 'highest']);\n    }\n  }, [response]);\n\n  const validateJSON = (jsonString) => {\n    try {\n      const parsed = JSON.parse(jsonString);\n      return parsed.data && Array.isArray(parsed.data);\n    } catch {\n      return false;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setResponse(null);\n\n    if (!validateJSON(inputJson)) {\n      setError('Invalid JSON format - must contain \"data\" array');\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const res = await fetch('http://localhost:8080/bfhl', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: inputJson,\n      });\n\n      const data = await res.json();\n      \n      if (!res.ok || !data.is_success) {\n        throw new Error(data.error || 'API request failed');\n      }\n\n      setResponse(data);\n    } catch (err) {\n      setError(err.message);\n      setResponse(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleOptionToggle = (option) => {\n    setSelectedOptions(prev => \n      prev.includes(option) \n        ? prev.filter(item => item !== option) \n        : [...prev, option]\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Data Processor</h1>\n      \n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={inputJson}\n          onChange={(e) => setInputJson(e.target.value)}\n          placeholder={'Example: {\"data\": [\"M\", \"1\", \"334\", \"4\", \"B\"]}'}\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Processing...' : 'Process Data'}\n        </button>\n      </form>\n\n      {error && <div className=\"error\">{error}</div>}\n\n      {response?.is_success && (\n        <div className=\"response-container\">\n          <div className=\"options-panel\">\n            {['numbers', 'alphabets', 'highest'].map((option) => (\n              <label key={option} className=\"option-label\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedOptions.includes(option)}\n                  onChange={() => handleOptionToggle(option)}\n                />\n                {option.charAt(0).toUpperCase() + option.slice(1)}\n              </label>\n            ))}\n          </div>\n\n          <div className=\"results\">\n            {selectedOptions.includes('numbers') && (\n              <div className=\"result-box\">\n                <h3>Numbers</h3>\n                <p>{response.numbers?.join(', ') || 'None found'}</p>\n              </div>\n            )}\n\n            {selectedOptions.includes('alphabets') && (\n              <div className=\"result-box\">\n                <h3>Alphabets</h3>\n                <p>{response.alphabets?.join(', ') || 'None found'}</p>\n              </div>\n            )}\n\n            {selectedOptions.includes('highest') && (\n              <div className=\"result-box\">\n                <h3>Highest Alphabet</h3>\n                <p>{response.highest_alphabet?.join(', ') || 'None found'}</p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}